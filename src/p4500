#!/usr/bin/env python
import fileutils
import itertools
import os
import sys
from argparse import ArgumentParser


def compare_song_info_lists(song_info_list1, song_info_list2):
    """Calls compare on every SongInfo object generated from the
    first directory with every SongInfo object generated by the
    second directory.
    """
    for song1 in song_info_list1:
        for song2 in song_info_list2:
            if song1 and song2:
                song1.compare(song2)


def compare(input_list):
    """Compares all audio files in dir1 to all audio files in dir2"""
    filelist1 = fileutils.gen_file_list(input_list[0])
    filelist2 = fileutils.gen_file_list(input_list[1])
    song_info_list1 = fileutils.read_files(filelist1)
    song_info_list2 = fileutils.read_files(filelist2)
    compare_song_info_lists(song_info_list1, song_info_list2)


def valid_dir(dirpath):
    if not os.path.isdir(dirpath):
        sys.exit("ERROR: %s is not a valid directory." % dirpath)
    else:
        return dirpath


def valid_file(filepath):
    if not os.path.isfile(filepath):
        sys.exit("ERROR: %s is not a valid file." % filepath)
    else:
        return filepath


def main(argv):
    parser = ArgumentParser(
        usage="%(prog)s [option] <pathname> [option] <pathname>")
    parser.add_argument(
        "-f", "--file", help="Accept a file as input.",
        action="append", type=valid_file)
    parser.add_argument(
        "-d", "--directory", help="Accept a directory as input.",
        action="append", type=valid_dir)
    args = vars(parser.parse_args())
    total_input_count = len(
        list(itertools.chain.from_iterable([arg for arg in args.values()
                                            if arg is not None])))
    if total_input_count < 2:
        sys.exit("ERROR: Not enough pathnames specified.")
    elif total_input_count > 2:
        sys.exit("ERROR: Too many pathnames specified.")
    else:
        # Create tuples which contain flag and path to pass to compare method
        inputs = []
        for flag, pathlist in args.items():
            if pathlist:
                for path in pathlist:
                    inputs.append((flag, path))
        compare(inputs)


if __name__ == "__main__":
    main(sys.argv)
