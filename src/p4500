#!/usr/bin/env python
import fileutils
import os
import sys
from optparse import OptionParser
from songidentity import SongInfo

def compare_song_info_lists(song_info_list1, song_info_list2):
    """Calls compare on every SongInfo object generated from the 
    first directory with every SongInfo object generated by the
    second directory.
    """
    for song1 in song_info_list1:
        for song2 in song_info_list2:
            if song1 and song2:
                song1.compare(song2)

def dir_compare(dir1, dir2):
    """Compares all audio files in dir1 to all audio files in dir2"""
    filelist1 = fileutils.gen_file_list(dir1)
    filelist2 = fileutils.gen_file_list(dir2)
    song_info_list1 = fileutils.read_files(filelist1)
    song_info_list2 = fileutils.read_files(filelist2)
    compare_song_info_lists(song_info_list1, song_info_list2)

def file_compare(file1, file2):
    """Compares file1 to file2"""
    song1 = fileutils.read_file(file1)
    song2 = fileutils.read_file(file2)
    if song1 and song2:
        song1.compare(song2)

def main(argv):
    usage = "p4500 [options] source1 [options] source2"
    parser = OptionParser(usage=usage)
    parser.add_option("-f", "--file", help = "Accept files as inputs.", action = "append")
    parser.add_option("-d", help = "Accept directories as inputs.", action = "append")
    options, args = parser.parse_args()
    option_dict = vars(options)
    if len(option_dict) < 2:
        parser.print_usage()
    if option_dict["file"] and len(option_dict["file"])==2:
        file_compare(option_dict["file"][0], option_dict["file"][1])
    elif option_dict["d"] and len(option_dict["d"])==2:
        dir_compare(option_dict["d"][0], option_dict["d"][1])
    else:
        parser.print_usage()

if __name__ == '__main__':
    main(sys.argv)
